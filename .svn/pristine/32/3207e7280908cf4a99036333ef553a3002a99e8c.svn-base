<template>
	<view class="content">
		<x-nav-bar leftWidth="24rpx" rightWidth="24rpx" :noBorder="true" leftIcon="none" title=" ">
            <view class="head">
                <view class="search-box">
                    <input type="text" disabled="disabled" @click="openUrl('./search')" placeholder="平安百万医疗" placeholder-class="input-pld">
                    <image lazy-load class="img-search" src="../../static/serach.png" mode=""></image>
                </view>
                <image lazy-load @click="toMessage" class="img-tips" :class="{isMsg:msgStatus==0}" src="../../static/tips.png" mode=""></image>
            </view>
		</x-nav-bar>
        <scroll-view scroll-x="true" class="tab-list top-list" v-if="isFixed">
            <view class="tab-item" v-for="(item,index) in tabList" :key="index" :class="{act: current == index}" @click="selTab(item,index)">{{item.name}}</view>
        </scroll-view>
        <x-refresh
         @refresh = 'refresh' 
         :isImg = 'refreshImg'
         :pullHeight = '50' 
         :maxHeight = '50' 
         :isTab = 'false' 
         ref = 'xRefresh'>
            <view class="one-day">
                <view class="top">
                    <image lazy-load src="../../static/one_day.png" mode=""></image>
                    <view class="right" @click="openUrl('./list')">
                        <text>近期回顾</text>
                        <image lazy-load src="../../static/more.png" mode=""></image>
                    </view>
                </view>
				<view v-for="(item,index) in focusList" :key="item.id" @click="toDetail(item)">
					<view :class="index == 0 ? '':'group'">
						<view class="img-box" v-if="index==0">
							<image lazy-load :src="item.pic" mode="aspectFill"></image>
							<view class="img-mask"></view>
							<view class="txt-box">
								<view class="tit">{{item.title}}</view>
							</view>
						</view>
						<view v-if="index > 0 " :class="index % 2 == 1 ? 'one' : 'two'">
							<view class="left">焦点</view>
							<view class="txt">{{item.title}}</view>
						</view>
					</view>
				</view>
            </view> 
            <view class="hot-recommend">
               <scroll-view scroll-x="true" class="tab-list" id="tab-list" v-if="!isFixed">
                    <view class="tab-item" v-for="(item,index) in tabList" :key="index" :class="{act: current == index}" @click="selTab(item,index)">{{item.name}}</view>
                </scroll-view>
			
                <view v-show="current == 0">
                    <view class="list">
                        <view v-for="(item,index) in articleList" :key="item.id">
                            <view class="item-y" v-if="index==4" @click="toDetail(item)">
                                <image lazy-load :src="item.pic+'?imageMogr2/crop/702x318'" mode="aspectFill"></image>
                                <view class="info">
                                    <view class="tit">{{item.title}}</view>
                                    <view class="time"><text>{{item.btnName}} </text> {{item.readNum|million}}看过 · {{item.shareNum|million}}转发</view>
                                </view>
                            </view>
                            <view v-else>
                                <b-train-item :item="item" @toDetail="toDetail(item)"></b-train-item>
                            </view>
                        </view>
                    </view>
                </view>
                <view v-show="current != 0">
                    <view  class="group-list">
                        <view class="list" v-if="list.length>0">
                            <b-train-item v-for="(item,index) in list" :key="index" :item="item" @toDetail="toDetail(item)"></b-train-item>
                            <x-load-more :status="pageStatus"></x-load-more>
                        </view>
                        <x-no-data v-else-if="list.length == 0 && noData"></x-no-data>
                    </view>
                </view>
            </view>
			<x-modal ref="modal" content="需要登录才能访问喔，赶紧去登录吧！" @sure="sure"></x-modal>
        </x-refresh>
	</view>
</template>

<script>
import { mapState } from 'vuex'
import { lastDateTime } from '@/common/utils'
export default {
	data() {
		return {
            refreshImg: false,
            current: 0,
            tabList: [],    // tab栏
            sendData: {
                pageNo: 1,
                pageSize: 10,
                articleType: '',
                channelid: '',
                order: '',
                isHot: 1,
            },
            articleList: [] ,//热门推荐
            list: [],
            pageStatus: 'more',
            noData: false,
            id: '',
            top: '' ,// TAB距离顶部距离
            isFixed: false,
			focusList:[]
        }
	},
    computed: {
        ...mapState(['isLogin', 'userinfo','msgStatus']),
        creadTime(){
            return (time) => {
                let t = time.replace(/-/g, '/')
                return lastDateTime(new Date(t).getTime())
            }
        }
    },
    filters:{
        million (value){
            if(!value){
                value = 0
            }
            let num; 
            if(value > 9999){
                num = (Math.floor(value/1000)/10) + 'W'
            }else if( value < 9999){ 
                num = value 
            }
            return num
        }
    },
    onShow() {
        uni.showTabBar()
    },
	onLoad(options) {
        try {
            let tabList = uni.getStorageSync('trainTabList')
            let articleList = uni.getStorageSync('trainArticleList')
            let focusList = uni.getStorageSync('focusList')
            if (tabList) {
                this.tabList = tabList
                this.tabList.unshift({id:-1, name: '推荐'})
            }
            if (articleList) {
                this.articleList = articleList
            }
			if(focusList){
				console.log(focusList)
				 this.focusList = focusList.articleList
			}
        } catch (e) {
            // error
        }
        this.getTabList({setStorage:true,name:'trainTabList'})
        this.getArticleList({setStorage:true,name:'trainArticleList'})
        this.getFocusList({setStorage:true,name:'focusList'})
	},
    mounted() {
        const query = uni.createSelectorQuery().in(this);
        query.select('#tab-list').boundingClientRect(data => {
            console.log("得到布局位置信息" + JSON.stringify(data));
            console.log("节点离页面顶部的距离为" + data.top);
            this.top = parseFloat(data.top) - parseFloat(data.height)
        }).exec()
    },
	methods: {
		sure(){
			 this.openUrl('../my/login')
		},
        toMessage(){
            if(!this.isLogin){
				this.$refs.modal.open()
                uni.hideTabBar()
                return
            }
            this.openUrl('../message/index')
            this.$store.commit('SET_MSG_STATUS',1)
        },
		getFocusList(setStorage){
			this.$api.get('/daily/focus/getFocusLately.do',{setStorage}).then( res => {
				if(res.success){
					this.focusList=res.data.articleList
				}
			})
		},
        toDetail(item){
            if(item.type == 'out'){
                this.openUrl('../my/webview?url=' + encodeURIComponent(item.url))
            }else if(item.type == 'local'){
                this.openUrl('./detail?id='+item.id)
            }
        },
        getTabList(setStorage){ // 获取tab列表
            this.$api.get('channel/channel/listAll.do',{params:{type: 'knowledge'},setStorage}).then( res => {
                if(res.success){
                    this.tabList = res.data
                    this.tabList.unshift({id:-1, name: '推荐'})
                }
            })
        },
        selTab(item,val){
            if(this.current == val) return
            this.current = val
            if(val == 0){
                this.sendData.channelid = ''
                this.sendData.isHot = 1
                this.sendData.pageNo = 1
                this.getArticleList()
            }else{
                this.noData = false
                this.pageStatus = 'more'
                this.sendData.channelid = item.id
                this.id = item.id
                this.sendData.pageNo = 1
                this.sendData.isHot = ''
                this.list = []
                try {
                    let list = uni.getStorageSync(item.id)
                	if(list){
						 if(list.length == 0){
							this.noData = true
						 }else{
							this.list = list
							this.sendData.pageNo++
						 }
                         return
                	}else{
						 this.getList({setStorage:true,name:item.id})
					}
                } catch (e) {
                    // error
                }
            }
        },
        getList(setStorage){
            this.$api.get('article/article/list.do',{params:this.sendData,setStorage}).then( res => {
                this.noData = true
                if(res.success){
                    if (this.sendData.pageNo <= 1) {
                    	this.list = res.data
                    } else {
                    	this.list.push(...res.data)
                    }
                    this.sendData.pageNo++
                    if (this.sendData.pageNo > Math.ceil(res.page.totalCount / this.sendData.pageSize)) {
                    	this.pageStatus = 'noMore'
                    }else{
                    	this.pageStatus = 'more'
                    }
                }
            })
        },
        getArticleList(setStorage){
            this.$api.get('article/article/list.do',{params:this.sendData,setStorage}).then( res => {
                if(res.success){
                    this.articleList = res.data
                    this.pageStatus = 'noMore'
                }
            })
        },
        //自定义下拉刷新
        refresh(){
            this.sendData.pageNo = 1
            this.getTabList()
            this.getArticleList()
            this.getFocusList()
            setTimeout(()=>{
            	this.$refs.xRefresh.reSet()
            },300)
        },
        onPageScroll(res){
            if(res.scrollTop - 12>=this.top){
                this.isFixed = true
            }else{
                this.isFixed = false
            }
        }
	},
    onReachBottom() {
        if(this.pageStatus != 'more') return
    	this.pageStatus = 'loading'
        this.getList()
    }
}
</script>

<style lang="less" scoped>
.content{padding: 0 24rpx;}
.text-line(@num: 2) { overflow: hidden; word-break: break-all; -webkit-line-clamp: @num; -webkit-box-orient: vertical; display: -webkit-box; }
.head{display: flex; align-items: center; justify-content: space-between; height: 100%;
    .search-box{position: relative;
        input{width: 634rpx; height: 60rpx; background-color: #F6F7F8; border-radius: 32rpx; padding-left: 80rpx; color: #999;}
        .input-pld{font-size: 28rpx; color: #999;}
        .img-search{width: 32rpx; height: 32rpx; position: absolute; left: 24rpx; top: 50%; transform: translateY(-50%);}
    }
    .img-tips{width: 44rpx; height: 44rpx;
        &.isMsg{ position: relative;
            &::after{position: absolute; right: 0; top: 0; content: ''; width: 16rpx; height: 16rpx; border-radius: 50%; background: #FE3B30;}
        }
    }
  }
.one-day{background: #fff; border-radius: 12rpx; padding: 24rpx; margin: 24rpx 0 18rpx;
    .top{display: flex; justify-content: space-between; font-size: 0; align-items: center;
        image{width: 158rpx; height: 40rpx;}
        .right{display: flex; align-items: center;
            text{font-size: 28rpx; color: #666; margin-right: 16rpx;}
            image{width: 32rpx; height: 32rpx;}
        }
    }
    .img-box{width: 654rpx; height: 320rpx; border-radius: 8rpx; position: relative; margin: 24rpx 0 18rpx;
        image{width: 100%; height: 100%; border-radius: 8rpx;}
        .img-mask{width: 100%; height: 100%; position: absolute; left: 0; top: 0; border-radius: 12rpx; background: #000; opacity: .3; z-index: 10;}
        .txt-box{position: absolute; width: 100%; left: 0; bottom: 24rpx; z-index: 12; padding: 0 24rpx; color: #fff;
            .tit{.text-line(2); font-size: 32rpx; font-weight: 600; line-height: 44rpx; }
            .txt{font-size: 24rpx; padding: 12rpx 0 20rpx;}
        }
    }
    .group{
        >view{display: flex; align-items: center; height: 78rpx; padding: 0 24rpx 0 30rpx; font-size: 28rpx;
            .left{width: 60rpx; height: 38rpx; border: 2rpx solid #FF5000; color: #FF5000; font-size: 24rpx; text-align: center; line-height: 34rpx; margin-right: 18rpx; flex-shrink: 0; border-radius: 4rpx;}
            .txt{.text-line(1);}
        }
        .one{background: #F6F7FF; color: #247CF0; font-weight: 600; border-radius: 8rpx 8rpx 0 0;}
        .two{background: #FEF8F2; color: #FF5500; font-weight: 600; border-radius: 0 0 8rpx 8rpx;}
    }
}
.tab-list{ white-space: nowrap; background-color: #fff; border-radius: 12rpx 12rpx 0 0;
    &.top-list{position: fixed; z-index: 100; width: 702rpx;}
    .tab-item{display: inline-block; vertical-align: middle; line-height: 44rpx; font-size: 32rpx; padding: 32rpx 24rpx 12rpx; font-weight: bold;
      &.act{color: #FE582D; position :relative; font-size: 36rpx;
          &:after{height: 4rpx; width: 28rpx; position: absolute; left: 50%; transform: translateX(-50%); content:" "; background-color: #FE582D; bottom: 0;}
      }
    }
}
.hot-recommend{border-radius: 12rpx;
    .group-list{background: #fff;
		.list{
			.item{
				&:first-of-type{padding-top: 0;}
				&:last-of-type{padding-bottom: 0;border-bottom: 0;}
			}
		}
	}
    .list{padding: 24rpx; background-color: #fff;margin-bottom: 24rpx;border-radius: 0 0 12rpx 12rpx;
		.item{padding: 16rpx 0;border-bottom: 2rpx solid #F6F7F8;margin-bottom: 0;
		
		}
		&>view{
			&:first-of-type{
				.item{padding-top: 0;}
			}
			&:last-of-type{
				.item{padding-bottom: 0;border-bottom: 0;}
			}
		}
		
        .tit{line-height: 48rpx; font-size: 32rpx; .text-line();}
        .time{color: #999; font-size: 24rpx;
            text{margin-right: 8rpx; color: #ff5000;}
        }
        .item-y{padding: 16rpx 0;border-bottom: 2rpx solid #F6F7F8;
            image{width: 100%; height: 318rpx; border-radius: 4rpx;}
            .tit{margin: 12rpx 0 18rpx;}
        }
        >view{
            &:last-of-type{
                .item{margin-bottom: 0;}
            }
        }
    }
}
</style>
